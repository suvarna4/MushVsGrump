
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Scanner;

public class Game {
	Player character;
	Scanner scan;
	char input;
	Player[] enemies;
	Scenario checkpoint;
	Scenario current;
	ArrayList<Character> act;
	// Needs to be referenced to access CD
	Connection con;

	public Game(Player c) throws SQLException {
		// Make the connection to SQL Server for queries.
		character = c;
		con = ConnectURL.makeConnection();
		scan = new Scanner(System.in);

		// String name = scan.next();
		// character = new Player(c);
		Scenario checkpoint = new Scenario(0, 1);
		current = checkpoint;

		main();
	}

	public void main() throws SQLException {
		while (true) {
			act = getActions();
			System.out.println("l: go left; r: go right; f: go forward; "
					+ "i: view inventory; d: delete from inventory; h: help");
			System.out.println("Your choices are: " + stringActions());
			String c = scan.next();
			handleActions(c);
		}
	}

	public ArrayList<Character> getActions() {
		ArrayList<Character> actions = new ArrayList<Character>();
		actions.addAll(current.getActions());
		actions.add('h');
		return actions;
	}

	public String stringActions() {
		StringBuilder sb = new StringBuilder();
		for (Character c : act) {
			sb.append(c);
			sb.append(' ');
		}
		return sb.toString();
	}

	public void handleActions(String c) throws SQLException {
		switch (c) {
		case "f":
			if (current.forwardScen != null)
				current = current.forwardScen;
			else
				current = new Scenario(0, 1, 'f', current);
			break;
		case "b":
			if (current.backScen != null)
				current = current.backScen;
			else
				current = new Scenario(0, 1, 'b', current);
			break;
		case "l":
			if (current.leftScen != null)
				current = current.leftScen;
			else
				current = new Scenario(0, 1, 'l', current);
			break;
		case "r":
			if (current.rightScen != null)
				current = current.rightScen;
			else
				current = new Scenario(0, 1, 'r', current);
			break;
		case "h":
			helpString();
			break;
		case "0":
			if (current.interactibles.get(0).type == 0) {
				cs = con.prepareCall("{call get_Item_Name(?,?)}");
			} else {
				cs = con.prepareCall("{call get_Weapon_Name(?,?)}");
			}
			cs.setInt(1, current.interactibles.get(0).id);
			cs.registerOutParameter(2, Types.VARCHAR);
			cs.execute();
			b = cs.getString(2);
			System.out.println(b);
			break;
		case "1":
			if (current.interactibles.get(1).type == 0) {
				cs = con.prepareCall("{call get_Item_Name(?,?)}");
			} else {
				cs = con.prepareCall("{call get_Weapon_Name(?,?)}");
			}
			cs.setInt(1, current.interactibles.get(1).id);
			cs.registerOutParameter(2, Types.VARCHAR);
			cs.execute();
			b = cs.getString(2);
			System.out.println(b);
			break;
		case "2":
			if (current.interactibles.get(2).type == 0) {
				cs = con.prepareCall("{call get_Item_Name(?,?)}");
			} else {
				cs = con.prepareCall("{call get_Weapon_Name(?,?)}");
			}
			cs.setInt(1, current.interactibles.get(2).id);
			cs.registerOutParameter(2, Types.VARCHAR);
			cs.execute();
			b = cs.getString(2);
			System.out.println(b);
			break;
		}
		}
	}

	public void helpString() throws SQLException {
		System.out.println("Which command do you need information on?");
		String c = scan.next();
		CallableStatement cs;
		String b;
		switch (c) {
		case "f":
			System.out.println("Go forward");
			break;
		case "b":
			System.out.println("Go back");
			break;
		case "l":
			System.out.println("Go left");
			break;
		case "r":
			System.out.println("Go right");
			break;
		case "h":
			System.out.println("This is the help function");
			break;
		case "i":
			// TODO: Ryan make the inventory show up here
		case "d":
			// TODO: Ryan allow the user to delete item(s) here
		case "u":
			// TODO: Next Milestone -- Use items
		case "0":
			if (current.interactibles.get(0).type == 0) {
				cs = con.prepareCall("{call get_Item_Name(?,?)}");
			} else {
				cs = con.prepareCall("{call get_Weapon_Name(?,?)}");
			}
			cs.setInt(1, current.interactibles.get(0).id);
			cs.registerOutParameter(2, Types.VARCHAR);
			cs.execute();
			b = cs.getString(2);
			System.out.println(b);
			break;
		case "1":
			if (current.interactibles.get(1).type == 0) {
				cs = con.prepareCall("{call get_Item_Name(?,?)}");
			} else {
				cs = con.prepareCall("{call get_Weapon_Name(?,?)}");
			}
			cs.setInt(1, current.interactibles.get(1).id);
			cs.registerOutParameter(2, Types.VARCHAR);
			cs.execute();
			b = cs.getString(2);
			System.out.println(b);
			break;
		case "2":
			if (current.interactibles.get(2).type == 0) {
				cs = con.prepareCall("{call get_Item_Name(?,?)}");
			} else {
				cs = con.prepareCall("{call get_Weapon_Name(?,?)}");
			}
			cs.setInt(1, current.interactibles.get(2).id);
			cs.registerOutParameter(2, Types.VARCHAR);
			cs.execute();
			b = cs.getString(2);
			System.out.println(b);
			break;
		}
	}

}
