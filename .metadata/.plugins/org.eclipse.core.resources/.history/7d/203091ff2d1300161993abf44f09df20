import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;

public class Player {
	private float actualHP;
	private float baseHP;
	// maxHP is calculated client-side by multiplying baseHP and hpMult
	private float maxHP;
	private float exp;
	private int floor;
	private int room;
	private int chID;
	private int inID;
	private float dmgMult;
	private float hpMult;
	private String weaponName;
	private String weaponPoison;
	private float maxWeaponDmg;
	// con must be used to access DB
	Connection con;
	// CallableStatement is used for stored procedures
	CallableStatement stmt;

	public Player(String username, String chName) throws SQLException {
		// Make the connection to SQL Server for queries.
		this.con = ConnectURL.makeConnection();
		String sql = "{call getUserCharacter (?, ?)}";
		stmt = con.prepareCall(sql);
		stmt.setString(1, username);
		stmt.setString(2, chName);
		ResultSet res = stmt.executeQuery();
		// Use res.getString to get columns from returned row
		// 1: Actual_hp 2: Base_HP 3: Exp 4: Floor 5: Room
		// 6: ChID 7: InID
		while (res.next()) {
			this.actualHP = Float.parseFloat(res.getString(1));
			this.baseHP = Float.parseFloat(res.getString(2));
			this.exp = Float.parseFloat(res.getString(3));
			this.floor = Integer.parseInt(res.getString(4));
			this.room = Integer.parseInt(res.getString(5));
			this.chID = Integer.parseInt(res.getString(6));
			this.inID = Integer.parseInt(res.getString(7));
		}
		System.out.println(actualHP);
		System.out.println(baseHP);
		System.out.println(exp);
		System.out.println(floor);
		System.out.println(room);
		System.out.println(chID);
		System.out.println(inID);
		
		sql = "{call InsertIntoInventory (?, ?)}";
		
		stmt = con.prepareCall(sql);
		stmt.setInt(1, inID);
		stmt.setInt(2, 1);
		stmt.execute();
		
//		sql = "{call InsertIntoInventory (inID, 2)}";
//		stmt = con.prepareCall(sql);
//		stmt.executeQuery();
		
		
		sql = "{call getMultipliersExp (?)}";
		stmt = con.prepareCall(sql);
		stmt.setString(1, Float.toString(this.exp));
		res = stmt.executeQuery();
		while (res.next()) {
			this.dmgMult = Float.parseFloat(res.getString(1));
			this.hpMult = Float.parseFloat(res.getString(2));
		}
		this.maxHP = this.baseHP * this.hpMult;
	}
}
